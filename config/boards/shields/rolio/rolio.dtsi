/*
 * Copyright (c) 2020 Pete Johanson, Ryan Cross
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include "rolio46-layout.dtsi"

&rolio46_layout {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};


/ {
    chosen {
        zmk,physical-layout = &rolio46_layout;
        zmk,kscan = &kscan0;
        zmk,backlight = &backlight;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <4>;
// | SW_A0 | SW_B0 | SW_C0 | SW_D0 | SW_E0 | SW_F0 |                   | SW_F0 | SW_E0 | SW_D0 | SW_C0 | SW_B0 | SW_A0 |
// | SW_A1 | SW_B1 | SW_C1 | SW_D1 | SW_E1 | SW_F1 |                   | SW_F1 | SW_E1 | SW_D1 | SW_C1 | SW_B1 | SW_A1 |
// | SW_A2 | SW_B2 | SW_C2 | SW_D2 | SW_E2 | SW_F2 | RE_1  |   | RE_1  | SW_F2 | SW_E2 | SW_D2 | SW_C2 | SW_B2 | SW_A2 |
//                 | SW_B4 | SW_B3 | SW_C3 | SW_D3 | SW_E3 |   | SW_E3 | SW_D3 | SW_C3 | SW_B3 | SW_B4 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                    RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                    RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(3,0)   RC(3,11) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,1)   RC(3,10) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    encoder_left: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
        status = "disabled";
    };

    encoder_right: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
        status = "disabled";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_left &encoder_right>;
        triggers-per-rotation = <15>;
    };

    backlight: pwmleds {
        compatible = "pwm-leds";
        pwm_led_0 {
            pwms = <&pwm0 0 10000 PWM_POLARITY_NORMAL>;
        };
    };

};